// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TiendaKeytlin.Server.Data;

#nullable disable

namespace TiendaKeytlin.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250405025700_Permisos1")]
    partial class Permisos1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RolUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Vendedor"
                        });
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.EstadoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Activo"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Inactivo"
                        });
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RolUsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RolUsuarioId");

                    b.ToTable("Permisos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Ver Dashboard"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Crear Dashboard"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Editar Dashboard"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Eliminar Dashboard"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Ver Caja"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Crear Caja"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Editar Caja"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Eliminar Caja"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Ver Artículos"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Crear Artículos"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Editar Artículos"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Eliminar Artículos"
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Ver Inventario"
                        },
                        new
                        {
                            Id = 14,
                            Nombre = "Crear Inventario"
                        },
                        new
                        {
                            Id = 15,
                            Nombre = "Editar Inventario"
                        },
                        new
                        {
                            Id = 16,
                            Nombre = "Eliminar Inventario"
                        },
                        new
                        {
                            Id = 17,
                            Nombre = "Ver Ventas"
                        },
                        new
                        {
                            Id = 18,
                            Nombre = "Crear Ventas"
                        },
                        new
                        {
                            Id = 19,
                            Nombre = "Editar Ventas"
                        },
                        new
                        {
                            Id = 20,
                            Nombre = "Eliminar Ventas"
                        },
                        new
                        {
                            Id = 21,
                            Nombre = "Ver Administración"
                        },
                        new
                        {
                            Id = 22,
                            Nombre = "Crear Administración"
                        },
                        new
                        {
                            Id = 23,
                            Nombre = "Editar Administración"
                        },
                        new
                        {
                            Id = 24,
                            Nombre = "Eliminar Administración"
                        },
                        new
                        {
                            Id = 25,
                            Nombre = "Ver Reportes"
                        },
                        new
                        {
                            Id = 26,
                            Nombre = "Crear Reportes"
                        },
                        new
                        {
                            Id = 27,
                            Nombre = "Editar Reportes"
                        },
                        new
                        {
                            Id = 28,
                            Nombre = "Eliminar Reportes"
                        });
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreContacto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TelefonoContacto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.RolPermiso", b =>
                {
                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.Property<int>("PermisoId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("RolId", "PermisoId");

                    b.HasIndex("PermisoId");

                    b.ToTable("RolPermisos");
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EstadoId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Imagen")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UltimoInicioSesion")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.Permiso", b =>
                {
                    b.HasOne("RolUsuario", null)
                        .WithMany("Permisos")
                        .HasForeignKey("RolUsuarioId");
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.RolPermiso", b =>
                {
                    b.HasOne("TiendaKeytlin.Server.Models.Permiso", "Permiso")
                        .WithMany()
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RolUsuario", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.Usuario", b =>
                {
                    b.HasOne("TiendaKeytlin.Server.Models.EstadoUsuario", "Estado")
                        .WithMany("Usuarios")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RolUsuario", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("RolUsuario", b =>
                {
                    b.Navigation("Permisos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.EstadoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
