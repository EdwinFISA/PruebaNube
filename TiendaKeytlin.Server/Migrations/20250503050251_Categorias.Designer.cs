// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TiendaKeytlin.Server.Data;

#nullable disable

namespace TiendaKeytlin.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250503050251_Categorias")]
    partial class Categorias
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RolUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Vendedor"
                        });
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoriaNombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EstadoUsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EstadoUsuarioId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.EstadoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Activo"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Inactivo"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Eliminado"
                        });
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RolUsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RolUsuarioId");

                    b.ToTable("Permisos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Ver Dashboard"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Crear Dashboard"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Editar Dashboard"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Eliminar Dashboard"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Ver Apertura Caja"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Crear Apertura Caja"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Editar Apertura Caja"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Eliminar Apertura Caja"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Ver Cierre Caja"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Crear Cierre Caja"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Editar Cierre Caja"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Eliminar Cierre Caja"
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Ver Productos"
                        },
                        new
                        {
                            Id = 14,
                            Nombre = "Crear Productos"
                        },
                        new
                        {
                            Id = 15,
                            Nombre = "Editar Productos"
                        },
                        new
                        {
                            Id = 16,
                            Nombre = "Eliminar Productos"
                        },
                        new
                        {
                            Id = 17,
                            Nombre = "Ver Categorías"
                        },
                        new
                        {
                            Id = 18,
                            Nombre = "Crear Categorías"
                        },
                        new
                        {
                            Id = 19,
                            Nombre = "Editar Categorías"
                        },
                        new
                        {
                            Id = 20,
                            Nombre = "Eliminar Categorías"
                        },
                        new
                        {
                            Id = 21,
                            Nombre = "Ver Proveedores"
                        },
                        new
                        {
                            Id = 22,
                            Nombre = "Crear Proveedores"
                        },
                        new
                        {
                            Id = 23,
                            Nombre = "Editar Proveedores"
                        },
                        new
                        {
                            Id = 24,
                            Nombre = "Eliminar Proveedores"
                        },
                        new
                        {
                            Id = 25,
                            Nombre = "Ver Inventario"
                        },
                        new
                        {
                            Id = 26,
                            Nombre = "Crear Inventario"
                        },
                        new
                        {
                            Id = 27,
                            Nombre = "Editar Inventario"
                        },
                        new
                        {
                            Id = 28,
                            Nombre = "Eliminar Inventario"
                        },
                        new
                        {
                            Id = 29,
                            Nombre = "Ver Pedidos"
                        },
                        new
                        {
                            Id = 30,
                            Nombre = "Crear Pedidos"
                        },
                        new
                        {
                            Id = 31,
                            Nombre = "Editar Pedidos"
                        },
                        new
                        {
                            Id = 32,
                            Nombre = "Eliminar Pedidos"
                        },
                        new
                        {
                            Id = 33,
                            Nombre = "Ver Ventas"
                        },
                        new
                        {
                            Id = 34,
                            Nombre = "Crear Ventas"
                        },
                        new
                        {
                            Id = 35,
                            Nombre = "Editar Ventas"
                        },
                        new
                        {
                            Id = 36,
                            Nombre = "Eliminar Ventas"
                        },
                        new
                        {
                            Id = 37,
                            Nombre = "Ver Historial"
                        },
                        new
                        {
                            Id = 38,
                            Nombre = "Crear Historial"
                        },
                        new
                        {
                            Id = 39,
                            Nombre = "Editar Historial"
                        },
                        new
                        {
                            Id = 40,
                            Nombre = "Eliminar Historial"
                        },
                        new
                        {
                            Id = 41,
                            Nombre = "Ver Usuarios"
                        },
                        new
                        {
                            Id = 42,
                            Nombre = "Crear Usuarios"
                        },
                        new
                        {
                            Id = 43,
                            Nombre = "Editar Usuarios"
                        },
                        new
                        {
                            Id = 44,
                            Nombre = "Eliminar Usuarios"
                        },
                        new
                        {
                            Id = 45,
                            Nombre = "Ver Contacto"
                        },
                        new
                        {
                            Id = 46,
                            Nombre = "Crear Contacto"
                        },
                        new
                        {
                            Id = 47,
                            Nombre = "Editar Contacto"
                        },
                        new
                        {
                            Id = 48,
                            Nombre = "Eliminar Contacto"
                        },
                        new
                        {
                            Id = 49,
                            Nombre = "Ver Roles"
                        },
                        new
                        {
                            Id = 50,
                            Nombre = "Crear Roles"
                        },
                        new
                        {
                            Id = 51,
                            Nombre = "Editar Roles"
                        },
                        new
                        {
                            Id = 52,
                            Nombre = "Eliminar Roles"
                        },
                        new
                        {
                            Id = 53,
                            Nombre = "Ver Reportes de Usuarios"
                        },
                        new
                        {
                            Id = 54,
                            Nombre = "Crear Reportes de Usuarios"
                        },
                        new
                        {
                            Id = 55,
                            Nombre = "Editar Reportes de Usuarios"
                        },
                        new
                        {
                            Id = 56,
                            Nombre = "Eliminar Reportes de Usuarios"
                        },
                        new
                        {
                            Id = 57,
                            Nombre = "Ver Reportes de Ventas"
                        },
                        new
                        {
                            Id = 58,
                            Nombre = "Crear Reportes de Ventas"
                        },
                        new
                        {
                            Id = 59,
                            Nombre = "Editar Reportes de Ventas"
                        },
                        new
                        {
                            Id = 60,
                            Nombre = "Eliminar Reportes de Ventas"
                        },
                        new
                        {
                            Id = 61,
                            Nombre = "Ver Reportes de Pedidos"
                        },
                        new
                        {
                            Id = 62,
                            Nombre = "Crear Reportes de Pedidos"
                        },
                        new
                        {
                            Id = 63,
                            Nombre = "Editar Reportes de Pedidos"
                        },
                        new
                        {
                            Id = 64,
                            Nombre = "Eliminar Reportes de Pedidos"
                        },
                        new
                        {
                            Id = 65,
                            Nombre = "Ver Reportes de Inventario"
                        },
                        new
                        {
                            Id = 66,
                            Nombre = "Crear Reportes de Inventario"
                        },
                        new
                        {
                            Id = 67,
                            Nombre = "Editar Reportes de Inventario"
                        },
                        new
                        {
                            Id = 68,
                            Nombre = "Eliminar Reportes de Inventario"
                        });
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreContacto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TelefonoContacto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.RolPermiso", b =>
                {
                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.Property<int>("PermisoId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("RolId", "PermisoId");

                    b.HasIndex("PermisoId");

                    b.ToTable("RolPermisos");
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodigoRecuperacion")
                        .HasColumnType("text");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EstadoId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaExpiracionCodigo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Imagen")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UltimoInicioSesion")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.Categoria", b =>
                {
                    b.HasOne("TiendaKeytlin.Server.Models.EstadoUsuario", "EstadoUsuario")
                        .WithMany()
                        .HasForeignKey("EstadoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoUsuario");
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.Permiso", b =>
                {
                    b.HasOne("RolUsuario", null)
                        .WithMany("Permisos")
                        .HasForeignKey("RolUsuarioId");
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.RolPermiso", b =>
                {
                    b.HasOne("TiendaKeytlin.Server.Models.Permiso", "Permiso")
                        .WithMany()
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RolUsuario", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.Usuario", b =>
                {
                    b.HasOne("TiendaKeytlin.Server.Models.EstadoUsuario", "Estado")
                        .WithMany("Usuarios")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RolUsuario", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("RolUsuario", b =>
                {
                    b.Navigation("Permisos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("TiendaKeytlin.Server.Models.EstadoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
